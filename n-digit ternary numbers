'''
The decimal system uses the digits 0-9, the binary system uses the digits 0 and 1, and the hexadecimal system uses the digits 0-9 and the letters A-F.  The ternary system is a base-3 numeral system that uses the digits 0, 1, and 2.

Given a number *n*, write a function that generates all *n*-digit ternary numbers.
 

EXAMPLE(S)
Numbers starting with zero shouldn't normally be included but the ternary representing the zero value is a valid 1-digit ternary. No other strings should start with a "0"!

generateNDigitTernaries(1) == ["0","1","2"]
generateNDigitTernaries(2) == ["10","11","12","20","21","22"]
generateNDigitTernaries(3) == [100,101,102...] 

2 possibilites, 3 possibilities

FUNCTION SIGNATURE
function generateNDigitTernaries(n) {
def generateNDigitTernaries(n: int) -> list[str]:
'''

def generateNDigitTernaries(n: int) -> list[str]:
    def backtrack(curr):
        #base case: sequence reached n length
        if len(curr) == n:
            result.append(''.join([str(x) for x in curr])) #join as str
            return

        #first digit cannot be 0
        if len(curr) == 0 and n>1:
            for digit in range(1,3):
                curr.append(digit)
                backtrack(curr)
                curr.pop()
        #not first digit
        else:
            for digit in range(3): #0,1,2
                curr.append(digit)
                backtrack(curr)
                curr.pop()

    result = []
    backtrack([])
    return result

#Verify
print(generateNDigitTernaries(1) ==
["0","1","2"])
print(generateNDigitTernaries(1))
print(generateNDigitTernaries(2) ==
["10","11","12","20","21","22"])
print(generateNDigitTernaries(3) ==
["100","101","102","110","111","112","120","121","122",
"200","201","202","210","211","212","220","221","222"])
print(len(generateNDigitTernaries(4)) == 54)
print(len(generateNDigitTernaries(5)) == 162)
print(len(generateNDigitTernaries(6)) == 486)
print(len(generateNDigitTernaries(7)) == 1458)
print(len(generateNDigitTernaries(8)) == 4374)
print(len(generateNDigitTernaries(9)) == 13122)
print(len(generateNDigitTernaries(10)) == 39366)

